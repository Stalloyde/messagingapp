// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id            Int     @id @default(autoincrement())
  groupName     String  
  participants  User[]
  messages      GroupMessages[]
  ProfilePic    String?
}

model GroupMessages {
  id        Int               @id @default(autoincrement())
  from      User              @relation(fields:[userId], references: [id])
  userId    Int
  to        Group             @relation(fields:[groupId], references: [id], onDelete:Cascade)
  groupId   Int
  content   String
  date      DateTime          @default(now())
}

model Message {
  id          Int      @id @default(autoincrement())
  from        User     @relation("from", fields:[userIdFrom], references: [id], onDelete:Cascade)
  userIdFrom  Int
  to          User     @relation("to", fields:[userIdTo], references: [id], onDelete:Cascade)
  userIdTo    Int
  content     String
  date        DateTime @default(now())
}

model User {
  id                Int           @id @default(autoincrement())
  username          String        @unique
  password          String
  status            String?
  contacts          User[]        @relation("userContacts")
  profilePic        String?
  messagesOut       Message[]     @relation("from")
  messagesIn        Message[]     @relation("to")
  contactsRequests  User[]        @relation("userContacts")
  groups            Group[]
  GroupMessages     GroupMessages[]
}



