// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi", "referentialActions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id            Int             @id @default(autoincrement())
  groupName     String  
  participants  User[]         
  messages      GroupMessages[] 
  ProfilePic    String?
}

model GroupMessages {
  id          Int       @id @default(autoincrement())
  from        User      @relation(fields:[userIdFrom], references: [id])
  userIdFrom  Int
  to          Group     @relation(fields:[groupIdTo], references: [id], onDelete:Cascade)
  groupIdTo   Int
  content     String
  date        DateTime  @default(now())
}

model Message {
  id          Int      @id @default(autoincrement())
  from        User     @relation("from", fields:[userIdFrom], references: [id], onDelete:Cascade)
  userIdFrom  Int
  to          User     @relation("to", fields:[userIdTo], references: [id], onDelete:Cascade)
  userIdTo    Int
  content     String
  date        DateTime @default(now())
}

model User {
  id                    Int                     @id @default(autoincrement())
  username              String                  @unique
  password              String
  status                String?
  contacts              User[]                  @relation("contacts")                  
  contactsOf            User[]                  @relation("contacts")
  profilePic            Pr       
  messagesOut           Message[]               @relation("from")
  messagesIn            Message[]               @relation("to")
  contactsRequestsFrom  ContactsRequests[]      @relation("contactsRequestsTo")
  contactsRequestsTo    ContactsRequests[]      @relation("contactsRequestsFrom")
  groups                Group[]                           
  GroupMessages         GroupMessages[]

}

model ContactsRequests {
  id          Int      @id @default(autoincrement())
  from        User     @relation("contactsRequestsFrom", fields:[userIdFrom], references: [id], onDelete:Cascade)
  userIdFrom  Int   
  to          User     @relation("contactsRequestsTo", fields:[userIdTo], references: [id], onDelete:Cascade)
  userIdTo    Int   
}
